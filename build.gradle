buildscript {
    repositories {
        mavenCentral()
    }


// 다시 간략히(적당히 대충) 말하지만 buildscript 안에서 정의된 dependencies 는 task 사용할 때
// 사용되는 라이브러리이며,buildscript 밖에서 정의된 dependencies 는 소스를 컴파일할 때 등에 사용된다.
// 라이브러리를 등록할 때에 버젼 지정을 안하는 것은 ‘spring-boot’ 플러그인을 적용시에 관련된 라이브러리에 버젼이 이미 설정되어있기 때문에 생략이 가능하다.​
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.5.2"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

allprojects {
    group = 'com.larry.multi'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java-library' // java 로 하면 api 메서드가 없다가 library 추가하니깐 나옴;;
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    dependencies {
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}

project(':api') {
    dependencies {
        implementation project(':core')
    }
}

project(':batch') {
    dependencies {
        implementation project(':core')
    }
}
